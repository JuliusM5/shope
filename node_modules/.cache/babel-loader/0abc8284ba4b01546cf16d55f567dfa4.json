{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Julius\\\\fullstack\\\\react-lesson\\\\testing\\\\recepts\\\\src\\\\context\\\\filter_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useContext, useReducer } from 'react';\nimport reducer from '../reducers/filter_reducer';\nimport { LOAD_PRODUCTS, SET_GRIDVIEW, SET_LISTVIEW, UPDATE_SORT, SORT_PRODUCTS, UPDATE_FILTERS, FILTER_PRODUCTS, CLEAR_FILTERS } from '../actions';\nimport { useProductsContext } from './products_context';\nconst initialState = {\n  filtered_products: [],\n  all_products: [],\n  grid_view: true,\n  sort: 'price-lowest',\n  filters: {\n    text: '',\n    company: 'all',\n    category: 'all',\n    color: 'all',\n    min_price: 0,\n    max_price: 0,\n    price: 0,\n    shipping: false\n  }\n};\nconst FilterContext = /*#__PURE__*/React.createContext();\nexport const FilterProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    products\n  } = useProductsContext();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_PRODUCTS,\n      payload: products\n    });\n  }, [products]);\n  useEffect(() => {\n    dispatch({\n      type: SORT_PRODUCTS\n    });\n  }, [products, state.sort]);\n\n  const setGridView = () => {\n    dispatch({\n      type: SET_GRIDVIEW\n    });\n  };\n\n  const setListView = () => {\n    dispatch({\n      type: SET_LISTVIEW\n    });\n  };\n\n  const updateSort = e => {\n    const value = e.target.value;\n    dispatch({\n      type: UPDATE_SORT,\n      payload: value\n    });\n  };\n\n  const updateFilters = e => {};\n\n  const clearFilters = () => {};\n\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: { ...state,\n      setGridView,\n      setListView,\n      updateSort,\n      updateFilters,\n      clearFilters\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n_s(FilterProvider, \"k64tZUIWNezMrbWVhA8xj3WhoSs=\", false, function () {\n  return [useProductsContext];\n});\n\n_c = FilterProvider;\nexport const useFilterContext = () => {\n  _s2();\n\n  return useContext(FilterContext);\n};\n\n_s2(useFilterContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"sources":["C:/Julius/fullstack/react-lesson/testing/recepts/src/context/filter_context.js"],"names":["React","useEffect","useContext","useReducer","reducer","LOAD_PRODUCTS","SET_GRIDVIEW","SET_LISTVIEW","UPDATE_SORT","SORT_PRODUCTS","UPDATE_FILTERS","FILTER_PRODUCTS","CLEAR_FILTERS","useProductsContext","initialState","filtered_products","all_products","grid_view","sort","filters","text","company","category","color","min_price","max_price","price","shipping","FilterContext","createContext","FilterProvider","children","products","state","dispatch","type","payload","setGridView","setListView","updateSort","e","value","target","updateFilters","clearFilters","useFilterContext"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,UAAvC,QAAyD,OAAzD;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,aARF,QASO,YATP;AAUA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,iBAAiB,EAAC,EADC;AAEnBC,EAAAA,YAAY,EAAC,EAFM;AAGnBC,EAAAA,SAAS,EAAE,IAHQ;AAInBC,EAAAA,IAAI,EAAC,cAJc;AAKnBC,EAAAA,OAAO,EAAC;AACNC,IAAAA,IAAI,EAAC,EADC;AAENC,IAAAA,OAAO,EAAC,KAFF;AAGNC,IAAAA,QAAQ,EAAC,KAHH;AAINC,IAAAA,KAAK,EAAC,KAJA;AAKNC,IAAAA,SAAS,EAAC,CALJ;AAMNC,IAAAA,SAAS,EAAC,CANJ;AAONC,IAAAA,KAAK,EAAC,CAPA;AAQNC,IAAAA,QAAQ,EAAC;AARH;AALW,CAArB;AAiBA,MAAMC,aAAa,gBAAG5B,KAAK,CAAC6B,aAAN,EAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9C,QAAM;AAACC,IAAAA;AAAD,MAAanB,kBAAkB,EAArC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoB/B,UAAU,CAACC,OAAD,EAASU,YAAT,CAApC;AAEAb,EAAAA,SAAS,CAAC,MAAI;AACdiC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC9B,aAAN;AAAqB+B,MAAAA,OAAO,EAACJ;AAA7B,KAAD,CAAR;AACC,GAFQ,EAEP,CAACA,QAAD,CAFO,CAAT;AAIA/B,EAAAA,SAAS,CAAC,MAAI;AACdiC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC1B;AAAN,KAAD,CAAR;AACC,GAFQ,EAEP,CAACuB,QAAD,EAAUC,KAAK,CAACf,IAAhB,CAFO,CAAT;;AAKA,QAAMmB,WAAW,GAAG,MAAM;AACxBH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC7B;AAAN,KAAD,CAAR;AACD,GAFD;;AAGC,QAAMgC,WAAW,GAAG,MAAM;AACzBJ,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC5B;AAAN,KAAD,CAAR;AACD,GAFA;;AAGD,QAAMgC,UAAU,GAAIC,CAAD,IAAM;AACvB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACAP,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAC3B,WAAN;AAAmB4B,MAAAA,OAAO,EAACK;AAA3B,KAAD,CAAR;AACD,GAHD;;AAIA,QAAME,aAAa,GAAIH,CAAD,IAAM,CAAE,CAA9B;;AACA,QAAOI,YAAY,GAAG,MAAK,CAAE,CAA7B;;AACA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,EAAC,GAAGX,KAAJ;AAAWI,MAAAA,WAAX;AAAuBC,MAAAA,WAAvB;AAAoCC,MAAAA,UAApC;AAA+CI,MAAAA,aAA/C;AAA6DC,MAAAA;AAA7D,KAA/B;AAAA,cACGb;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9BM,C,CA+BP;;GA/BaD,c;UACQjB,kB;;;KADRiB,c;AAgCb,OAAO,MAAMe,gBAAgB,GAAG,MAAM;AAAA;;AACpC,SAAO3C,UAAU,CAAC0B,aAAD,CAAjB;AACD,CAFM;;IAAMiB,gB","sourcesContent":["import React, { useEffect, useContext, useReducer } from 'react'\nimport reducer from '../reducers/filter_reducer'\nimport {\n  LOAD_PRODUCTS,\n  SET_GRIDVIEW,\n  SET_LISTVIEW,\n  UPDATE_SORT,\n  SORT_PRODUCTS,\n  UPDATE_FILTERS,\n  FILTER_PRODUCTS,\n  CLEAR_FILTERS,\n} from '../actions'\nimport { useProductsContext } from './products_context'\n\nconst initialState = {\n  filtered_products:[],\n  all_products:[],\n  grid_view: true,\n  sort:'price-lowest',\n  filters:{\n    text:'',\n    company:'all',\n    category:'all',\n    color:'all',\n    min_price:0,\n    max_price:0,\n    price:0,\n    shipping:false,\n  },\n}\n\nconst FilterContext = React.createContext()\n\nexport const FilterProvider = ({ children }) => {\n  const {products} = useProductsContext();\n  const [state, dispatch] = useReducer(reducer,initialState)\n\n  useEffect(()=>{\n  dispatch({type:LOAD_PRODUCTS, payload:products})  \n  },[products])\n\n  useEffect(()=>{\n  dispatch({type:SORT_PRODUCTS})\n  },[products,state.sort])\n\n\n  const setGridView = () => {\n    dispatch({type:SET_GRIDVIEW})\n  }\n   const setListView = () => {\n    dispatch({type:SET_LISTVIEW})\n  }\n  const updateSort = (e) =>{\n    const value = e.target.value\n    dispatch({type:UPDATE_SORT, payload:value})\n  }\n  const updateFilters = (e) =>{}\n  const  clearFilters = () =>{}\n  return (\n    <FilterContext.Provider value={{...state, setGridView,setListView, updateSort,updateFilters,clearFilters}}>\n      {children}\n    </FilterContext.Provider>\n  )\n}\n// make sure use\nexport const useFilterContext = () => {\n  return useContext(FilterContext)\n}\n"]},"metadata":{},"sourceType":"module"}