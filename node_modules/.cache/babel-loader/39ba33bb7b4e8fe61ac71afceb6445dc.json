{"ast":null,"code":"import { ADD_TO_CART, CLEAR_CART, COUNT_CART_TOTALS, REMOVE_CART_ITEM, TOGGLE_CART_ITEM_AMOUNT } from '../actions';\nimport CartItem from '../components/CartItem';\n\nconst cart_reducer = (state, action) => {\n  if (action.type === ADD_TO_CART) {\n    const {\n      id,\n      color,\n      amount,\n      product\n    } = action.payload;\n    const tempItem = state.cart.find(i => i.id === id + color);\n\n    if (tempItem) {\n      const tempCart = state.cart.map(CartItem => {\n        if (CartItem.id === id + color) {\n          let newAmount = cartItem.amount + amount;\n\n          if (newAmount > cartItem.max) {\n            newAmount = cartItem.max;\n          }\n\n          return { ...cartItem,\n            amount: newAmount\n          };\n        } else {\n          return CartItem;\n        }\n      });\n      return { ...state,\n        cart: tempCart\n      };\n    } else {\n      const newItem = {\n        id: id + color,\n        name: product.name,\n        color,\n        amount,\n        image: product.images[0].url,\n        price: product.price,\n        max: product.sotck\n      };\n      return { ...state,\n        cart: [...state, newItem]\n      };\n    }\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default cart_reducer;","map":{"version":3,"sources":["C:/Julius/fullstack/react-lesson/testing/recepts/src/reducers/cart_reducer.js"],"names":["ADD_TO_CART","CLEAR_CART","COUNT_CART_TOTALS","REMOVE_CART_ITEM","TOGGLE_CART_ITEM_AMOUNT","CartItem","cart_reducer","state","action","type","id","color","amount","product","payload","tempItem","cart","find","i","tempCart","map","newAmount","cartItem","max","newItem","name","image","images","url","price","sotck","Error"],"mappings":"AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,uBALF,QAMO,YANP;AAOA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAGA,MAAM,CAACC,IAAP,KAAgBT,WAAnB,EAA+B;AAC7B,UAAM;AAACU,MAAAA,EAAD;AAAIC,MAAAA,KAAJ;AAAUC,MAAAA,MAAV;AAAiBC,MAAAA;AAAjB,QAA4BL,MAAM,CAACM,OAAzC;AACA,UAAMC,QAAQ,GAAGR,KAAK,CAACS,IAAN,CAAWC,IAAX,CAAiBC,CAAD,IAAMA,CAAC,CAACR,EAAF,KAASA,EAAE,GAClDC,KADiB,CAAjB;;AAEA,QAAGI,QAAH,EAAY;AACV,YAAMI,QAAQ,GAAGZ,KAAK,CAACS,IAAN,CAAWI,GAAX,CAAgBf,QAAD,IAAY;AAC1C,YAAGA,QAAQ,CAACK,EAAT,KAAgBA,EAAE,GAAGC,KAAxB,EAA8B;AAC5B,cAAIU,SAAS,GAAGC,QAAQ,CAACV,MAAT,GAAkBA,MAAlC;;AACA,cAAGS,SAAS,GAAGC,QAAQ,CAACC,GAAxB,EAA4B;AAC1BF,YAAAA,SAAS,GAAGC,QAAQ,CAACC,GAArB;AACD;;AACD,iBAAO,EAAC,GAAGD,QAAJ;AAAaV,YAAAA,MAAM,EAAES;AAArB,WAAP;AACD,SAND,MAMK;AACH,iBAAOhB,QAAP;AACD;AACF,OAVgB,CAAjB;AAYA,aAAO,EAAC,GAAGE,KAAJ;AAAUS,QAAAA,IAAI,EAACG;AAAf,OAAP;AACD,KAdD,MAcK;AACH,YAAMK,OAAO,GAAG;AACdd,QAAAA,EAAE,EAACA,EAAE,GAACC,KADQ;AAEdc,QAAAA,IAAI,EAACZ,OAAO,CAACY,IAFC;AAGdd,QAAAA,KAHc;AAIdC,QAAAA,MAJc;AAKdc,QAAAA,KAAK,EAACb,OAAO,CAACc,MAAR,CAAe,CAAf,EAAkBC,GALV;AAMdC,QAAAA,KAAK,EAAChB,OAAO,CAACgB,KANA;AAOdN,QAAAA,GAAG,EAACV,OAAO,CAACiB;AAPE,OAAhB;AASA,aAAO,EAAC,GAAGvB,KAAJ;AAAUS,QAAAA,IAAI,EAAC,CAAC,GAAGT,KAAJ,EAAUiB,OAAV;AAAf,OAAP;AACD;AACF;;AAED,QAAM,IAAIO,KAAJ,CAAW,gBAAevB,MAAM,CAACC,IAAK,iBAAtC,CAAN;AACD,CAlCD;;AAoCA,eAAeH,YAAf","sourcesContent":["import {\n  ADD_TO_CART,\n  CLEAR_CART,\n  COUNT_CART_TOTALS,\n  REMOVE_CART_ITEM,\n  TOGGLE_CART_ITEM_AMOUNT,\n} from '../actions'\nimport CartItem from '../components/CartItem';\n\nconst cart_reducer = (state, action) => {\n  if(action.type === ADD_TO_CART){\n    const {id,color,amount,product} = action.payload;\n    const tempItem = state.cart.find((i)=> i.id === id + \n    color)\n    if(tempItem){\n      const tempCart = state.cart.map((CartItem)=>{\n        if(CartItem.id === id + color){\n          let newAmount = cartItem.amount + amount;\n          if(newAmount > cartItem.max){\n            newAmount = cartItem.max\n          }\n          return {...cartItem,amount: newAmount}\n        }else{\n          return CartItem\n        }\n      })\n\n      return {...state,cart:tempCart}\n    }else{\n      const newItem = {\n        id:id+color,\n        name:product.name,\n        color,\n        amount,\n        image:product.images[0].url,\n        price:product.price,\n        max:product.sotck,\n      }\n      return {...state,cart:[...state,newItem]}\n    }\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`)\n}\n\nexport default cart_reducer\n"]},"metadata":{},"sourceType":"module"}