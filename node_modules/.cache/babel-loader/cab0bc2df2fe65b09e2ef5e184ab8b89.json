{"ast":null,"code":"import { ADD_TO_CART, CLEAR_CART, COUNT_CART_TOTALS, REMOVE_CART_ITEM, TOGGLE_CART_ITEM_AMOUNT } from '../actions';\nimport CartItem from '../components/CartItem';\n\nconst cart_reducer = (state, action) => {\n  if (action.type === ADD_TO_CART) {\n    const {\n      id,\n      color,\n      amount,\n      product\n    } = action.payload;\n    const tempItem = state.cart.find(i => i.id === id + color);\n\n    if (tempItem) {\n      const tempCart = state.cart.map(cartItem => {\n        if (cartItem.id === id + color) {\n          let newAmount = cartItem.amount + amount;\n\n          if (newAmount > cartItem.max) {\n            newAmount = cartItem.max;\n          }\n\n          return { ...cartItem,\n            amount: newAmount\n          };\n        } else {\n          return cartItem;\n        }\n      });\n      return { ...state,\n        cart: tempCart\n      };\n    } else {\n      const newItem = {\n        id: id + color,\n        name: product.name,\n        color,\n        amount,\n        image: product.images[0].url,\n        price: product.price,\n        max: product.sotck\n      };\n      return { ...state,\n        cart: [...state.cart, newItem]\n      };\n    }\n  }\n\n  if (action.type === REMOVE_CART_ITEM) {\n    const tempCart = state.cart.filter(item => item.id !== action.payload);\n    return { ...state,\n      cart: tempCart\n    };\n  }\n\n  if (action.type === CLEAR_CART) {\n    return { ...state,\n      cart: []\n    };\n  }\n\n  if (action.type === TOGGLE_CART_ITEM_AMOUNT) {\n    const {\n      id,\n      value\n    } = action.payload;\n    const tempCart = state.cart.map(item => {\n      if (item.id === id) {\n        if (value == -'inc') {\n          let newAmount = item.amount + 1;\n\n          if (newAmount > item.max) {\n            newAmount = item.max;\n          }\n\n          return { ...item,\n            amount: newAmount\n          };\n        }\n\n        if (value === 'dec') {\n          let newAmount = item.amount - 1;\n\n          if (newAmount < 1) {\n            newAmount = 1;\n          }\n\n          return { ...item,\n            amount: newAmount\n          };\n        }\n      } else {\n        return item;\n      }\n    });\n    return { ...state,\n      cart: tempCart\n    };\n  }\n\n  if (action.type === COUNT_CART_TOTALS) {\n    const {\n      total_items,\n      total_amount\n    } = state.cart.reduce((total, cartItem) => {\n      const {\n        amount,\n        price\n      } = cartItem;\n      total.total_items += amount;\n      total.total_amount += price * amount;\n      return total;\n    }, {\n      total_items: 0,\n      total_amount: 0\n    });\n    return { ...state,\n      total_items,\n      total_amount\n    };\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default cart_reducer;","map":{"version":3,"sources":["C:/Julius/fullstack/react-lesson/testing/recepts/src/reducers/cart_reducer.js"],"names":["ADD_TO_CART","CLEAR_CART","COUNT_CART_TOTALS","REMOVE_CART_ITEM","TOGGLE_CART_ITEM_AMOUNT","CartItem","cart_reducer","state","action","type","id","color","amount","product","payload","tempItem","cart","find","i","tempCart","map","cartItem","newAmount","max","newItem","name","image","images","url","price","sotck","filter","item","value","total_items","total_amount","reduce","total","Error"],"mappings":"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","sourcesContent":["import {\n  ADD_TO_CART,\n  CLEAR_CART,\n  COUNT_CART_TOTALS,\n  REMOVE_CART_ITEM,\n  TOGGLE_CART_ITEM_AMOUNT,\n} from '../actions'\nimport CartItem from '../components/CartItem';\n\nconst cart_reducer = (state, action) => {\n  if(action.type === ADD_TO_CART){\n    const {id,color,amount,product} = action.payload\n    const tempItem = state.cart.find((i)=> i.id === id + color)\n    if(tempItem){\n      const tempCart = state.cart.map((cartItem)=>{\n        if(cartItem.id === id + color){\n          let newAmount = cartItem.amount + amount;\n          if(newAmount > cartItem.max){\n            newAmount = cartItem.max\n          }\n          return {...cartItem,amount: newAmount}\n        }else{\n          return cartItem\n        }\n      })\n\n      return {...state,cart:tempCart}\n    }else{\n      const newItem = {\n        id:id+color,\n        name:product.name,\n        color,\n        amount,\n        image:product.images[0].url,\n        price:product.price,\n        max:product.sotck,\n      }\n      return {...state,cart:[...state.cart,newItem]}\n    }\n  }\n  if(action.type === REMOVE_CART_ITEM){\n    const tempCart = state.cart.filter((item)=>item.id !== action.payload)\n    return {...state,cart:tempCart}\n  }\n  if(action.type === CLEAR_CART){\n    return {...state, cart: []}\n  }\n  if(action.type === TOGGLE_CART_ITEM_AMOUNT){\n    const {id,value} = action.payload\n    const tempCart= state.cart.map((item)=>{\n      if(item.id === id){\n        if(value ==- 'inc'){\n          let newAmount = item.amount +1\n          if(newAmount > item.max){\n            newAmount = item.max\n          }\n          return {...item, amount: newAmount}\n        }\n        if(value === 'dec'){\n          let newAmount = item.amount - 1\n          if(newAmount < 1){\n            newAmount = 1\n          }\n          return {...item, amount: newAmount}\n        }\n      }else{\n        return item\n      }\n    })\n\n    return {...state,cart:tempCart}\n  }\n  if(action.type === COUNT_CART_TOTALS){\n    const {total_items,total_amount} = state.cart.reduce(\n      (total,cartItem) => {\n        const {amount,price} = cartItem\n          total.total_items += amount;\n          total.total_amount += price * amount\n          return total\n        },\n        {\n      total_items:0,\n      total_amount:0\n    }\n  )\n    return {...state, total_items,total_amount}\n  }\n  throw new Error(`No Matching \"${action.type}\" - action type`)\n}\n\nexport default cart_reducer\n"]},"metadata":{},"sourceType":"module"}