{"ast":null,"code":"import { act } from 'react-dom/test-utils';\nimport { LOAD_PRODUCTS, SET_LISTVIEW, SET_GRIDVIEW, UPDATE_SORT, SORT_PRODUCTS, UPDATE_FILTERS, FILTER_PRODUCTS, CLEAR_FILTERS } from '../actions';\n\nconst filter_reducer = (state, action) => {\n  if (action.type === LOAD_PRODUCTS) {\n    return { ...state,\n      all_products: [...action.payload],\n      filtered_products: [...action.payload]\n    };\n  }\n\n  if (action.type === SET_GRIDVIEW) {\n    return { ...state,\n      grid_view: true\n    };\n  }\n\n  if (action.type === SET_LISTVIEW) {\n    return { ...state,\n      grid_view: false\n    };\n  }\n\n  if (action.type === UPDATE_SORT) {\n    return { ...state,\n      sort: action.payload\n    };\n  }\n\n  if (action.type === SORT_PRODUCTS) {\n    const {\n      sort,\n      filtered_products\n    } = state;\n    let tempProducts = [...filtered_products];\n\n    if (sort === 'price-lowest') {\n      tempProducts = tempProducts.sort((a, b) => {\n        if (a.price < b.price) {\n          return -1;\n        }\n\n        if (a.price > b.price) {\n          return 1;\n        }\n\n        return 0;\n      });\n    }\n\n    if (sort === 'price-highest') {\n      tempProducts = tempProducts.sort((a, b) => b.price - a.price);\n    }\n\n    if (sort === 'name-a') {\n      tempProducts = tempProducts.sort((a, b) => {\n        return a.name.localeCompare(b.name);\n      });\n    }\n\n    if (sort === 'name-z') {\n      tempProducts = tempProducts.sort((a, b) => {\n        return b.name.localeCompare(a.name);\n      });\n    }\n\n    return { ...state,\n      filtered_products: tempProducts\n    };\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default filter_reducer;","map":{"version":3,"sources":["C:/Julius/fullstack/react-lesson/testing/recepts/src/reducers/filter_reducer.js"],"names":["act","LOAD_PRODUCTS","SET_LISTVIEW","SET_GRIDVIEW","UPDATE_SORT","SORT_PRODUCTS","UPDATE_FILTERS","FILTER_PRODUCTS","CLEAR_FILTERS","filter_reducer","state","action","type","all_products","payload","filtered_products","grid_view","sort","tempProducts","a","b","price","name","localeCompare","Error"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,aARF,QASO,YATP;;AAWA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,MAAGA,MAAM,CAACC,IAAP,KAAgBX,aAAnB,EAAiC;AAC/B,WAAO,EACL,GAAGS,KADE;AAELG,MAAAA,YAAY,EAAC,CAAC,GAAGF,MAAM,CAACG,OAAX,CAFR;AAGLC,MAAAA,iBAAiB,EAAC,CAAC,GAAGJ,MAAM,CAACG,OAAX;AAHb,KAAP;AAKD;;AACD,MAAGH,MAAM,CAACC,IAAP,KAAgBT,YAAnB,EAAgC;AAC9B,WAAM,EAAC,GAAGO,KAAJ;AAAUM,MAAAA,SAAS,EAAC;AAApB,KAAN;AACD;;AACD,MAAGL,MAAM,CAACC,IAAP,KAAgBV,YAAnB,EAAgC;AAC9B,WAAM,EAAC,GAAGQ,KAAJ;AAAUM,MAAAA,SAAS,EAAC;AAApB,KAAN;AACD;;AACD,MAAGL,MAAM,CAACC,IAAP,KAAgBR,WAAnB,EAA+B;AAC7B,WAAO,EAAC,GAAGM,KAAJ;AAAUO,MAAAA,IAAI,EAAEN,MAAM,CAACG;AAAvB,KAAP;AACD;;AACD,MAAGH,MAAM,CAACC,IAAP,KAAgBP,aAAnB,EAAiC;AAC/B,UAAM;AAACY,MAAAA,IAAD;AAAOF,MAAAA;AAAP,QAA4BL,KAAlC;AACA,QAAIQ,YAAY,GAAG,CAAC,GAAGH,iBAAJ,CAAnB;;AACA,QAAGE,IAAI,KAAK,cAAZ,EAA2B;AACzBC,MAAAA,YAAY,GAAGA,YAAY,CAACD,IAAb,CAAkB,CAACE,CAAD,EAAGC,CAAH,KAAO;AACtC,YAAGD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAf,EAAqB;AACnB,iBAAO,CAAC,CAAR;AACD;;AACD,YAAGF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAf,EAAqB;AACnB,iBAAO,CAAP;AACD;;AACD,eAAO,CAAP;AACD,OARc,CAAf;AASD;;AACA,QAAGJ,IAAI,KAAK,eAAZ,EAA4B;AAC7BC,MAAAA,YAAY,GAAGA,YAAY,CAACD,IAAb,CAAkB,CAACE,CAAD,EAAGC,CAAH,KAAOA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAArC,CAAf;AACC;;AACA,QAAGJ,IAAI,KAAK,QAAZ,EAAqB;AACpBC,MAAAA,YAAY,GAAGA,YAAY,CAACD,IAAb,CAAkB,CAACE,CAAD,EAAGC,CAAH,KAAO;AACtC,eAAOD,CAAC,CAACG,IAAF,CAAOC,aAAP,CAAqBH,CAAC,CAACE,IAAvB,CAAP;AACD,OAFc,CAAf;AAGD;;AACA,QAAGL,IAAI,KAAK,QAAZ,EAAqB;AACtBC,MAAAA,YAAY,GAAGA,YAAY,CAACD,IAAb,CAAkB,CAACE,CAAD,EAAGC,CAAH,KAAO;AACpC,eAAOA,CAAC,CAACE,IAAF,CAAOC,aAAP,CAAqBJ,CAAC,CAACG,IAAvB,CAAP;AACD,OAFY,CAAf;AAGC;;AACD,WAAO,EAAC,GAAGZ,KAAJ;AAAUK,MAAAA,iBAAiB,EAACG;AAA5B,KAAP;AACD;;AACD,QAAM,IAAIM,KAAJ,CAAW,gBAAeb,MAAM,CAACC,IAAK,iBAAtC,CAAN;AACD,CA/CD;;AAiDA,eAAeH,cAAf","sourcesContent":["import { act } from 'react-dom/test-utils'\nimport {\n  LOAD_PRODUCTS,\n  SET_LISTVIEW,\n  SET_GRIDVIEW,\n  UPDATE_SORT,\n  SORT_PRODUCTS,\n  UPDATE_FILTERS,\n  FILTER_PRODUCTS,\n  CLEAR_FILTERS,\n} from '../actions'\n\nconst filter_reducer = (state, action) => {\n  if(action.type === LOAD_PRODUCTS){\n    return {\n      ...state,\n      all_products:[...action.payload],\n      filtered_products:[...action.payload],\n    }\n  }\n  if(action.type === SET_GRIDVIEW){\n    return{...state,grid_view:true}\n  }\n  if(action.type === SET_LISTVIEW){\n    return{...state,grid_view:false}\n  }\n  if(action.type === UPDATE_SORT){\n    return {...state,sort: action.payload}\n  }\n  if(action.type === SORT_PRODUCTS){\n    const {sort, filtered_products} = state\n    let tempProducts = [...filtered_products]\n    if(sort === 'price-lowest'){\n      tempProducts = tempProducts.sort((a,b)=>{\n        if(a.price < b.price){\n          return -1\n        }\n        if(a.price > b.price){\n          return 1\n        } \n        return 0\n      })\n    } \n     if(sort === 'price-highest'){\n    tempProducts = tempProducts.sort((a,b)=>b.price - a.price)\n    }\n     if(sort === 'name-a'){\n      tempProducts = tempProducts.sort((a,b)=>{\n        return a.name.localeCompare(b.name)\n      })\n    }\n     if(sort === 'name-z'){\n    tempProducts = tempProducts.sort((a,b)=>{\n        return b.name.localeCompare(a.name)\n      })\n    }\n    return {...state,filtered_products:tempProducts}\n  }\n  throw new Error(`No Matching \"${action.type}\" - action type`)\n}\n\nexport default filter_reducer\n"]},"metadata":{},"sourceType":"module"}