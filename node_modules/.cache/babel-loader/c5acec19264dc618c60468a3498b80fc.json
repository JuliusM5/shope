{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Julius\\\\fullstack\\\\react-lesson\\\\testing\\\\recepts\\\\src\\\\components\\\\Sort.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFilterContext } from '../context/filter_context';\nimport { BsFillGridFill, BsList } from 'react-icons/bs';\nimport styled from 'styled-components';\nimport { Form } from 'react-bootstrap';\n\nconst Sort = () => {\n  _s();\n\n  const {\n    filtered_products: products,\n    grid_view,\n    setGridView,\n    sort,\n    updateSort,\n    setListView\n  } = useFilterContext();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${grid_view ? 'active' : null}`,\n        onClick: setGridView,\n        children: /*#__PURE__*/_jsxDEV(BsFillGridFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${!grid_view ? 'active' : null}`,\n        onClick: setListView,\n        children: /*#__PURE__*/_jsxDEV(BsList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [products.length, \" products found\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: \"sort\",\n        id: \"sort\",\n        className: \"sort-input\",\n        value: sort,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"price-lowet\",\n          children: \"price (lowest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"price-highest\",\n          children: \"price (highest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"name-a\",\n          children: \"name (a-z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"name-z\",\n          children: \"name (z-a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sort, \"QD3/Hl/phJhkrs7av0x/kZSuOGk=\", false, function () {\n  return [useFilterContext];\n});\n\n_c = Sort;\nconst Wrapper = styled.section`\n  display: grid;\n  grid-template-columns: auto auto 1fr auto;\n  align-items: center;\n  margin-bottom: 2rem;\n  column-gap: 2rem;\n  @media (max-width: 576px) {\n    display: grid;\n    grid-template-columns: 1fr;\n    row-gap: 0.75rem;\n    .btn-container {\n      width: 50px;\n    }\n    label {\n      display: inline-block;\n      margin-right: 0.5rem;\n    }\n  }\n  @media (min-width: 768px) {\n    column-gap: 2rem;\n  }\n  p {\n    text-transform: capitalize;\n    margin-bottom: 0;\n  }\n\n  .btn-container {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: 0.5rem;\n    button {\n      background: transparent;\n      border: 1px solid var(--clr-black);\n      color: var(--clr-black);\n      width: 1.5rem;\n      border-radius: var(--radius);\n      height: 1.5rem;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      svg {\n        font-size: 1rem;\n      }\n    }\n    .active {\n      background: var(--clr-black);\n      color: var(--clr-white);\n    }\n  }\n\n  .sort-input {\n    border-color: transparent;\n    font-size: 1rem;\n    text-transform: capitalize;\n    padding: 0.25rem 0.5rem;\n  }\n  label {\n    font-size: 1rem;\n    text-transform: capitalize;\n  }\n`;\n_c2 = Wrapper;\nexport default Sort;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sort\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["C:/Julius/fullstack/react-lesson/testing/recepts/src/components/Sort.js"],"names":["React","useFilterContext","BsFillGridFill","BsList","styled","Form","Sort","filtered_products","products","grid_view","setGridView","sort","updateSort","setListView","length","Wrapper","section"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,gBAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AACJC,IAAAA,iBAAiB,EAACC,QADd;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,IAJI;AAICC,IAAAA,UAJD;AAKJC,IAAAA;AALI,MAKWZ,gBAAgB,EALjC;AAMA,sBACE,QAAC,OAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAG,GAAEQ,SAAS,GAAG,QAAH,GAC5C,IAAK,EADN;AACS,QAAA,OAAO,EAAEC,WADlB;AAAA,+BAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAqB,QAAA,SAAS,EAAG,GAAE,CAACD,SAAD,GAAa,QAAb,GAClC,IAAK,EADN;AACS,QAAA,OAAO,EAAEI,WADlB;AAAA,+BAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,iBAAIL,QAAQ,CAACM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,EAAE,EAAC,MAAxB;AAA+B,QAAA,SAAS,EAAC,YAAzC;AAAsD,QAAA,KAAK,EAAEH,IAA7D;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAhCD;;GAAML,I;UAMaL,gB;;;KANbK,I;AAkCN,MAAMS,OAAO,GAAGX,MAAM,CAACY,OAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7DA;MAAMD,O;AA+DN,eAAeT,IAAf","sourcesContent":["import React from 'react'\nimport { useFilterContext } from '../context/filter_context'\nimport { BsFillGridFill, BsList } from 'react-icons/bs'\nimport styled from 'styled-components'\nimport { Form } from 'react-bootstrap'\nconst Sort = () => {\n  const {\n    filtered_products:products,\n    grid_view,\n    setGridView,\n    sort,updateSort,\n    setListView} = useFilterContext()\n  return (\n    <Wrapper>\n      <div className='btn-container'>\n        <button type='button' className={`${grid_view ? 'active'\n        :null}`} onClick={setGridView}>\n          <BsFillGridFill/>\n        </button>\n        <button type='button'className={`${!grid_view ? 'active'\n        :null}`} onClick={setListView}>\n          <BsList/>\n        </button>\n      </div>\n      <p>{products.length} products found</p>\n      <hr />\n      <form>\n        <label htmlFor='sort'>sort by</label>\n        <select value='sort' id='sort' className='sort-input' value={sort}>\n          <option value='price-lowet'>price (lowest</option>\n          <option value='price-highest'>price (highest</option>\n          <option value='name-a'>name (a-z</option>\n          <option value='name-z'>name (z-a</option>\n        </select>\n      </form>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.section`\n  display: grid;\n  grid-template-columns: auto auto 1fr auto;\n  align-items: center;\n  margin-bottom: 2rem;\n  column-gap: 2rem;\n  @media (max-width: 576px) {\n    display: grid;\n    grid-template-columns: 1fr;\n    row-gap: 0.75rem;\n    .btn-container {\n      width: 50px;\n    }\n    label {\n      display: inline-block;\n      margin-right: 0.5rem;\n    }\n  }\n  @media (min-width: 768px) {\n    column-gap: 2rem;\n  }\n  p {\n    text-transform: capitalize;\n    margin-bottom: 0;\n  }\n\n  .btn-container {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: 0.5rem;\n    button {\n      background: transparent;\n      border: 1px solid var(--clr-black);\n      color: var(--clr-black);\n      width: 1.5rem;\n      border-radius: var(--radius);\n      height: 1.5rem;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      svg {\n        font-size: 1rem;\n      }\n    }\n    .active {\n      background: var(--clr-black);\n      color: var(--clr-white);\n    }\n  }\n\n  .sort-input {\n    border-color: transparent;\n    font-size: 1rem;\n    text-transform: capitalize;\n    padding: 0.25rem 0.5rem;\n  }\n  label {\n    font-size: 1rem;\n    text-transform: capitalize;\n  }\n`\n\nexport default Sort\n"]},"metadata":{},"sourceType":"module"}